name: Codepet deploy from Develop

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
    secrets:
      HOST:
        required: true
      USER:
        required: true
      SSH_KEY:
        required: true
      SSH_PASSPHRASE:
        required: true
      PROJECT_NAME:
        required: true
      POSTGRES_DB:
        required: true
      POSTGRES_HOST:
        required: true
      POSTGRES_PORT:
        required: true
      POSTGRES_USER:
        required: true
      POSTGRES_PASSWORD:
        required: true
      SECRET_KEY:
        required: true
      DJANGO_SETTINGS_MODULE:
        required: true
      DOCKERHUB_USERNAME_FRONT:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      ALLOWED_HOSTS:
        required: true
      NGINX_NAME:
        required: true
      EMAIL_HOST:
        required: true
      EMAIL_HOST_USER:
        required: true
      EMAIL_HOST_PASSWORD:
        required: true
      NEXT_PUBLIC_CAPTCHA_SITE_KEY:
        required: true
      NEXT_SHARP_PATH:
        required: true
      BACKEND_LOGS_DIR:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      HOST: ${{ secrets.HOST }}
      USER: ${{ secrets.USER }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      DOCKERHUB_USERNAME_FRONT: ${{ secrets.DOCKERHUB_USERNAME_FRONT }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      NGINX_NAME: ${{ secrets.NGINX_NAME }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      NEXT_PUBLIC_CAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_CAPTCHA_SITE_KEY }}
      NEXT_SHARP_PATH: ${{ secrets.NEXT_SHARP_PATH }}
      BACKEND_LOGS_DIR: ${{ secrets.BACKEND_LOGS_DIR }}
      SERVER_NAME_DEV: ${{ secrets.SERVER_NAME_DEV }}
      SERVER_HOST_DEV: ${{ secrets.SERVER_HOST_DEV }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Create project directory and .env-file
      uses: appleboy/ssh-action@master
      with:
        host: $HOST
        username: $USER
        key: $SSH_KEY }}
        passphrase: $SSH_PASSPHRASE }}
        script: |
          sudo rm -r $PROJECT_NAME }}
          sudo mkdir -p $PROJECT_NAME }}/infra
          sudo chmod 777 $PROJECT_NAME }}/infra
          sudo cat > $PROJECT_NAME }}/infra/.env << _EOF_
            POSTGRES_DB=$POSTGRES_DB
            POSTGRES_HOST=$POSTGRES_HOST
            POSTGRES_PORT=$POSTGRES_PORT
            POSTGRES_USER=$POSTGRES_USER
            POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            PROJECT_NAME=$PROJECT_NAME
            SECRET_KEY=$SECRET_KEY
            DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
            DOCKERHUB_USERNAME_FRONT=$DOCKERHUB_USERNAME_FRONT
            DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME
            ALLOWED_HOSTS=$ALLOWED_HOSTS
            NGINX_NAME=$NGINX_NAME
            EMAIL_HOST=$EMAIL_HOST
            EMAIL_HOST_USER=$EMAIL_HOST_USER
            EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
            NEXT_PUBLIC_CAPTCHA_SITE_KEY=$NEXT_PUBLIC_CAPTCHA_SITE_KEY
            NEXT_SHARP_PATH=$NEXT_SHARP_PATH
            BACKEND_LOGS_DIR=$BACKEND_LOGS_DIR
            BRANCH_TAG=${{ github.ref_name }}
            SERVER_NAME_DEV: $SERVER_NAME_DEV
            SERVER_HOST_DEV: $SERVER_HOST_DEV
          _EOF_
    - name: Copy docker-compose-dev.yaml via ssh
      uses: appleboy/scp-action@master
      with:
        host: $HOST
        username: $USER
        key: $SSH_KEY
        passphrase: $SSH_PASSPHRASE
        source: "infra/docker-compose-dev.yaml"
        target: "codepet"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: $HOST
        username: $USER
        key: $SSH_KEY
        passphrase: $SSH_PASSPHRASE
        script: |
          cd codepet/infra
          sudo docker compose -f docker-compose-dev.yaml pull
          sudo docker compose -f docker-compose-dev.yaml down
          sudo docker compose -f docker-compose-dev.yaml up -d
          sudo docker compose -f docker-compose-dev.yaml exec backend python manage.py migrate
          sudo docker compose -f docker-compose-dev.yaml exec backend python manage.py collectstatic --no-input
          sudo docker compose -f docker-compose-dev.yaml exec backend cp -r static/. /backend_static/static/
          sudo docker system prune -f
