name: Codepet QA deploy

on:
  workflow_call:


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Create project directory and .env-file
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_QA }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          sudo rm -r ${{ secrets.PROJECT_NAME }}
          sudo mkdir -p ${{ secrets.PROJECT_NAME }}/infra
          sudo chmod 777 ${{ secrets.PROJECT_NAME }}/infra
          sudo cat > ${{ secrets.PROJECT_NAME }}/infra/.env << _EOF_
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            PROJECT_NAME=${{ secrets.PROJECT_NAME }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }}
            DOCKERHUB_USERNAME_FRONT=${{ secrets.DOCKERHUB_USERNAME_FRONT }}
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
            NGINX_NAME_DEV=${{ secrets.NGINX_DEV }}
            NGINX_NAME_QA=${{ secrets.NGINX_QA }}
            DOMAIN_NAME=${{ secrets.DOMAIN_DEV }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
            EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
            NEXT_PUBLIC_CAPTCHA_SITE_KEY=${{ secrets.NEXT_PUBLIC_CAPTCHA_SITE_KEY }}
            NEXT_SHARP_PATH=${{ secrets.NEXT_SHARP_PATH }}
            SERVER_NAME_DEV=${{ secrets.SERVER_NAME_DEV }}
            SERVER_HOST_DEV=${{ secrets.SERVER_HOST_DEV }}
            SERVER_NAME_QA=${{ secrets.SERVER_NAME_QA }}
            SERVER_HOST_QA=${{ secrets.SERVER_HOST_QA }}
          _EOF_
    - name: Copy docker-compose-prod.yaml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_QA }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "infra/docker-compose-prod.yaml"
        target: "codepet"
    - name: Copy certbot_renew script via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_QA }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "infra/certbot_renew_qa.sh"
        target: "codepet"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_QA }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd codepet/infra
          sudo docker compose -f docker-compose-prod.yaml pull
          sudo docker compose -f docker-compose-prod.yaml down
          sudo docker compose -f docker-compose-prod.yaml up -d
          sudo docker compose -f docker-compose-prod.yaml exec backend python manage.py migrate
          sudo docker compose -f docker-compose-prod.yaml exec backend python manage.py collectstatic --no-input
          sudo docker compose -f docker-compose-prod.yaml exec backend cp -r static/. /backend_static/static/
          sudo docker compose -f docker-compose-prod.yaml restart nginx
          sudo echo "0 */12 * * * /root/codepet/infra/certbot_renew.sh && perl -e 'sleep int(rand(43200))" | crontab -
          sudo docker system prune -f
