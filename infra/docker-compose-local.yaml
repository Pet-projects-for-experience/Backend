name: code-pet

volumes:
  db_value:
  static_volume:
  media_volume:

services:
  db:
    image: postgres:16.2-alpine
    env_file: ../.env
    ports:
      - "5432:5432"
    volumes:
      - db_value:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ../.
      dockerfile: ./infra/backend/Dockerfile
    env_file: ../.env
    volumes:
      - static_volume:/backend_static/
      - media_volume:/backend/media/
      - ./../src/backend/data/logs:/backend/data/logs
    command:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic -c --noinput
        cp -r /backend/static/. /backend_static/static
        python manage.py makemigrations
        python manage.py migrate
        gunicorn --bind 0.0.0.0:8000 config.wsgi
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:alpine3.18
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery:
    build:
      context: ../.
      dockerfile: ./infra/backend/Dockerfile
    env_file: .env
    volumes:
      - ./../src/backend/data/logs:/backend/data/logs
    command: celery -A config.celery worker -l warning -E --logfile=./data/logs/celery-worker.log
    depends_on:
      - backend

  celery-beat:
    build:
      context: ../.
      dockerfile: ./infra/backend/Dockerfile
    env_file: .env
    volumes:
      - ./../src/backend/data/logs:/backend/data/logs
    command: celery -A config beat -l warning  --logfile=./data/logs/celery-beat.log
    depends_on:
      - backend

  nginx:
    image: nginx:1.25.2-alpine3.18-slim
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx_loc.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/staticfiles/
    depends_on:
      - backend
